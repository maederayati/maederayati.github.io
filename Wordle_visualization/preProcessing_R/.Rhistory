l<-which(temp!=0)
if(length(l)!=0){
for(k in 1:length(l)){
p<-permutations(n=length(l),r=2,v=l)
l2<-length(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
}
print(i)
}
relation<-matrix(ncol=100,nrow = 100)
for(i in 1:100){
for(j in 1:100){
relation[i,j]<-0
}
}
for(i in 1:nrow(n)){
for(j in 1:4){
tem<-vector()
temp<-n[i,((j-1)*50+1):(j*50)]
l<-which(temp!=0)
if(length(l)>1){
for(k in 1:length(l)){
p<-permutations(n=length(l),r=2,v=l)
l2<-length(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
}
print(i)
}
p[e,1]
e
relation<-matrix(ncol=100,nrow = 100)
for(i in 1:100){
for(j in 1:100){
relation[i,j]<-0
}
}
for(i in 1:nrow(n)){
for(j in 1:4){
tem<-vector()
temp<-n[i,((j-1)*50+1):(j*50)]
l<-which(temp!=0)
if(length(l)>1){
for(k in 1:length(l)){
p<-permutations(n=length(l),r=2,v=l)
l2<-length(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
}
print(i)
}
l
relation<-matrix(ncol=100,nrow = 100)
for(i in 1:100){
for(j in 1:100){
relation[i,j]<-0
}
}
for(i in 1:nrow(n)){
for(j in 1:4){
tem<-vector()
temp<-n[i,((j-1)*50+1):(j*50)]
l<-unique(which(temp!=0))
if(length(l)>1){
p<-permutations(n=length(l),r=2,v=l)
l2<-nrow(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
print(i)
}
head(relation)
relation<-matrix(ncol=100,nrow = 100)
for(i in 1:100){
for(j in 1:100){
relation[i,j]<-0
}
}
for(i in 1:nrow(n)){
for(j in 1:4){
tem<-vector()
temp<-n[i,((j-1)*50+1):(j*50)]
l<-unique(which(temp!=0))
if(length(l)>1){
p<-permutations(n=length(l),r=2,v=l)
l2<-nrow(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
print(i)
}
head(relation)
relation<-as.data.frame(relation)
names(relation)<-as.character(1:100)
write.csv(relation, file="wiki_relation_data")
relation<-as.data.frame(relation)
names(relation)<-as.character(1:100)
write.csv(relation, file="wiki_data_relation.csv")
relation<-matrix(ncol=100,nrow = 100)
for(i in 1:100){
for(j in 1:100){
relation[i,j]<-0
}
}
for(i in 1:nrow(n)){
for(j in 1:4){
tem<-vector()
temp<-n[i,((j-1)*100+1):(j*100)]
l<-unique(which(temp!=0))
if(length(l)>1){
p<-permutations(n=length(l),r=2,v=l)
l2<-nrow(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
print(i)
}
relation<-as.data.frame(relation)
names(relation)<-as.character(1:100)
write.csv(relation, file="wiki_data_relation.csv")
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_huff.R')
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_huff.R')
library(gtools)
n<-as.data.frame(m)
n<-n[,-c(1)]
relation<-matrix(ncol=100,nrow = 100)
for(i in 1:100){
for(j in 1:100){
relation[i,j]<-0
}
}
for(i in 1:nrow(n)){
for(j in 1:4){
tem<-vector()
temp<-n[i,((j-1)*100+1):(j*100)]
l<-unique(which(temp!=0))
if(length(l)>1){
p<-permutations(n=length(l),r=2,v=l)
l2<-nrow(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
print(i)
}
relation<-as.data.frame(relation)
names(relation)<-as.character(1:100)
write.csv(relation, file="huff_data_relation.csv")
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForTimeSeries_huff.R')
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForTimeSeries_wiki.R')
m[c(5089,5092),]
nrow(data_wiki)
data_wiki<-read.delim("wikinews.tsv", sep = "\t",header = TRUE,stringsAsFactors=FALSE)
nrow(data_wiki)
data_wiki<-read.table("wikinews.tsv", sep = "\t",header = TRUE,stringsAsFactors=FALSE)
data_wiki<-read.table("wikinews.tsv", sep = "\t",header = TRUE,stringsAsFactors=FALSE, fill=TRUE)
nrow(data_wiki)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
summary(d$X1)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
d$date
class(d$date)
c<-as.Date(d$date)
class(c)
c<-as.Date(d$date)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
format(d$date[1])
format(d$date[1], "%Y,%m")
format(d$date[1], format="%Y,%m")
d$date[1]
class(d$date[1])
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
d$date[2]
d$date[3]
d$date
class(d$date)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
d$date
d$date[1]
d$date[3]
d<-read.csv("timeSeries_wiki.csv")
d$date<-as.numeric(as.character(d$date))
d$date
d$date[i]
d<-read.csv("timeSeries_wiki.csv")
d$date<-as.character(d$date)
d
d$date
d<-read.csv("timeSeries_wiki.csv")
d$date<-as.character(d$date)
for(i in 1:nrow(d)){
d$date[i]<-floor(d$date[i]/100)
}
d$date
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
d$date
sum(c(12,3), c(1,4))
ncol(d)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
i
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
head(temp)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
head(temp)
nrow(temp)
install.packages("readr")
g<-read_tsv("wikinews.tsv")
library(readr)
g<-read_tsv("wikinews.tsv")
nrow(g)
class(g)
r<-as.data.frame(g)
class(r)
getwd()
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_wiki.R')
library(gtools)
for(i in 1:nrow(n)){
for(j in 1:4){
tem<-vector()
temp<-n[i,((j-1)*100+1):(j*100)]
l<-unique(which(temp!=0))
if(length(l)>1){
p<-permutations(n=length(l),r=2,v=l)
l2<-nrow(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
print(i)
}
relation<-as.data.frame(relation)
names(relation)<-as.character(1:100)
write.csv(relation, file="wiki_data_relation.csv")
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForTimeSeries_wiki.R')
names(timeSeries)<-c("date",as.character(wiki_words[,1]))
write.csv(timeSeries, file="timeSeries_wiki.csv", row.names = FALSE)
head(data_wiki)
head(data_wiki[,1])
head(data_wiki[,2])
timeSeries[,1]
head(n[,1],6)
head(m[,1],6)
m[1,1]<-as.character(data_wiki[1,2])
m[1,1]
head(m)
e<-timeSeries[-1,]
for(i in nrow(e)){}
max(e)
max[e[,1]]
max(e[,1])
max(e[,2])
tem<-vecor()
tem<-vector()
for(i in 1:nrow(e)){temp<-c(temp,max(e[i,]))}
for(i in 1:nrow(e)){temp<-c(temp,max(e[i,-c(1)]))}
for(i in 1:nrow(e)){temp<-c(temp,max(e[i,-c(1)])); print(i)}
max(tem)
max(temp)
max(tem, na.rm=T
)
max(temp)
max(unlist(temp))
e<-e[-c(1)]
head(e)
for(i in 1:nrow(e)){temp<-c(temp,max(e[i,])); print(i)}
max(temp)
max(unlist(temp))
temp
head(e[,1])
temp<-vector()
for(i in 1:nrow(e)){temp<-c(temp,max(e[i,])); print(i)}
max(unlist(temp))
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForTimeSeries_wiki.R')
timeSeries[,1]<-as.Date(timeSeries[,1])
class(data_wiki)
class(data_wiki[,1])
data_wiki[1,1]
data_wiki[1,2]
data_wiki[1,3]
class(data_wiki[,2])
as.numeric(data_wiki[1,2])
as.character(data_wiki[1,2])
as.numeric(as.character(data_wiki[1,2]))
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForTimeSeries_wiki.R')
head(m)
f<-as.data.frame(m)
f[,2:400]<-as.numeric(f[,2:400])
f[,(2:401)]<-as.numeric(f[,(2:401)])
f[,2]<-as.numeric(f[,2])
clas(f[,2])
class(f[,2])
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForTimeSeries_wiki.R')
for(i in 2:401){
timeSeries[,i]<-as.numeric(timeSeries[,i])
}
ncol(timeSeries)
for(i in 2:101){
timeSeries[,i]<-as.numeric(timeSeries[,i])
}
names(timeSeries)<-c("date",as.character(wiki_words[,1]))
write.csv(timeSeries, file="timeSeries_wiki.csv", row.names = FALSE)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
d<-read.csv("timeSeries_wiki.csv")
d$date<-as.numeric(as.character(d$date))
for(i in 1:nrow(d)){
d$date[i]<-floor(d$date[i]/100)
}
nrow(d)
length(unique(d$date))
length(d$date)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
head(temp,1)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/wiki_revision_time.R')
tail(temp)
write.csv(temp, file="wiki_timeSeries_byMonth.csv")
words<-read.csv("wiki_data_bubble.csv")
names(temp)<-c("date",as.character(words[,1]))
write.csv(temp, file="wiki_timeSeries_byMonth.csv", row.names = FALSE)
words<-read.csv("wiki_data_bubble.csv")
names(temp)<-c("date",as.character(words[,1]))
write.csv(temp, file="wiki_timeSeries_byMonth.csv", row.names = FALSE)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_huff.R')
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_wiki.R')
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_huff.R')
relation<-as.data.frame(relation)
names(relation)<-as.character(1:50)
names(relation)<-as.character(1:50)
write.csv(relation, file="sara_huff_data_relation.csv")
library(readr)
library(gtools)
data_huff<-as.data.frame(read_tsv("huffington.tsv"))
huff_words<-read.csv("huffingtonfreq.csv")
m<-matrix(ncol = 401, nrow = nrow(data_huff))
for(i in 1:nrow(data_huff)){
print(i)
m[i,1]<-data_huff[i,2]
for(j in seq(3,6)){
a<-as.character(data_huff[i,j])
g<-unlist(strsplit(a,split="[|]|[ ]|//|\\t|\\n"))
for(k in 1:100){
w<-as.character(huff_words[k,1])
size<-length(which(g%in%w))
m[i,(k+(j-3)*100+1)]<-size
}
}
}
head(m)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_wiki.R')
head(m)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_huff.R')
head(m)
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_huff.R')
head(relation)
head(m,1)
library(readr)
library(gtools)
data_huff<-as.data.frame(read_tsv("huffington.tsv"))
huff_words<-read.csv("huffingtonfreq.csv")
m<-matrix(ncol = 401, nrow = nrow(data_huff))
for(i in 1:nrow(data_huff)){
print(i)
m[i,1]<-data_huff[i,2]
for(j in seq(3,6)){
a<-as.character(data_huff[i,j])
g<-unlist(strsplit(a,split="[|]|\\t|\\n"))
for(k in 1:100){
w<-as.character(huff_words[k,1])
size<-length(which(g%in%w))
m[i,(k+(j-3)*100+1)]<-size
}
}
}
head(m)
n<-as.data.frame(m)
n<-n[,-c(1)]
relation<-matrix(ncol=50,nrow = 50)
for(i in 1:100){
for(j in 1:100){
relation[i,j]<-0
}
}
for(i in 1:nrow(n)){
for(j in 1:4){
tem<-vector()
temp<-n[i,((j-1)*50+1):(j*50)]
l<-unique(which(temp!=0))
if(length(l)>1){
p<-permutations(n=length(l),r=2,v=l)
l2<-nrow(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
print(i)
}
head(relation)
head(n)
for(j in 1:4){
library(readr)
library(gtools)
data_huff<-as.data.frame(read_tsv("huffington.tsv"))
huff_words<-read.csv("huffingtonfreq.csv")
m<-matrix(ncol = 201, nrow = nrow(data_huff))
for(i in 1:nrow(data_huff)){
print(i)
m[i,1]<-data_huff[i,2]
for(j in seq(3,6)){
a<-as.character(data_huff[i,j])
g<-unlist(strsplit(a,split="[|]|\\t|\\n"))
for(k in 1:50){
w<-as.character(huff_words[k,1])
size<-length(which(g%in%w))
m[i,(k+(j-3)*50+1)]<-size
}
}
}
n<-as.data.frame(m)
n<-n[,-c(1)]
relation<-matrix(ncol=50,nrow = 50)
for(i in 1:50){
for(j in 1:50){
relation[i,j]<-0
}
}
for(i in 1:nrow(n)){
for(j in 1:4){
tem<-vector()
temp<-n[i,((j-1)*50+1):(j*50)]
l<-unique(which(temp!=0))
if(length(l)>1){
p<-permutations(n=length(l),r=2,v=l)
l2<-nrow(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
print(i)
}
relation<-as.data.frame(relation)
names(relation)<-as.character(1:50)
write.csv(relation, file="sara_huff_data_relation.csv")
library(readr)
library(gtools)
data_huff<-as.data.frame(read_tsv("huffington.tsv"))
huff_words<-read.csv("huffingtonfreq.csv")
m<-matrix(ncol = 201, nrow = nrow(data_huff))
for(i in 1:nrow(data_huff)){
print(i)
m[i,1]<-data_huff[i,2]
for(j in seq(3,6)){
a<-as.character(data_huff[i,j])
g<-unlist(strsplit(a,split="[|]|\\t|\\n"))
for(k in 1:50){
w<-as.character(huff_words[k,1])
size<-length(which(g%in%w))
m[i,(k+(j-3)*50+1)]<-size
}
}
}
n<-as.data.frame(m)
n<-n[,-c(1)]
relation<-matrix(ncol=50,nrow = 50)
for(i in 1:50){
for(j in 1:50){
relation[i,j]<-0
}
}
for(i in 1:nrow(n)){
for(j in 1:4){
tem<-vector()
temp<-n[i,((j-1)*50+1):(j*50)]
l<-unique(which(temp!=0))
if(length(l)>1){
p<-permutations(n=length(l),r=2,v=l)
l2<-nrow(p)
for(e in 1:l2){
relation[p[e,1],p[e,2]]<-relation[p[e,1],p[e,2]]+1
}
}
}
print(i)
}
relation<-as.data.frame(relation)
names(relation)<-as.character(1:50)
write.csv(relation, file="sara_huff_data_relation.csv")
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_huff.R')
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_huff.R')
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_huff.R')
source('C:/drive/Myself/Courses/Visualization/phase2/data/Clean/dataForRelation_huff.R')
